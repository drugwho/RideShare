version: '3.1'

services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: on-failure
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  
  rabbitmq:
    image: rabbitmq:3.8.3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  
  master:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: master
    labels:
        worker_type: "master"
    command: sh -c "sleep 25 && python3 worker.py"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - .:/code
    environment:
    - WORKER_TYPE=MASTER
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure

  
  slave:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: slave
    labels:
       worker_type: "slave"
    command: sh -c "sleep 15 && python3 worker.py"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - .:/code
    environment:
    - WORKER_TYPE=SLAVE
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure
  
  
  orchestrator:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: orchestrator
    command: sh -c "sleep 15 && python orchestrator.py"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - .:/code
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure
    ports:
      - 80:80